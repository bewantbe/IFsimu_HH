<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="raster_tuning_raw" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Release Linux + MKL">
				<Option platforms="Unix;" />
				<Option output="bin/Release/raster_tuning_HH3_gcc" prefix_auto="1" extension_auto="1" />
				<Option working_dir="./" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Option parameters="-ng -v -inf - -n 80 20 -t 1e3 -seed 1 -mat net_100_0X65763652.txt -pr 1 -ps 0.03 -scee 0.05 -scei 0.07 -scie 0.09 -scii 0.09 --bin-save -o ./data/a.dat" />
				<Compiler>
					<Add option="-march=corei7-avx" />
					<Add option="-O2" />
					<Add option="-DEIGEN_USE_MKL_ALL" />
					<Add directory="/usr/include/eigen3" />
					<Add directory="/opt/intel/composer_xe_2013_sp1.2.144/mkl/include" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option='-Wl,--start-group &quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/lib/intel64&quot;/libmkl_intel_lp64.a &quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/lib/intel64&quot;/libmkl_intel_thread.a &quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/lib/intel64&quot;/libmkl_core.a -Wl,--end-group -L&quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/../compiler/lib/intel64&quot; -Wl,-Bstatic -liomp5 -Wl,-Bdynamic -lm -ldl -lpthread' />
					<Add library="GL" />
					<Add library="GLU" />
					<Add library="glut" />
				</Linker>
			</Target>
			<Target title="Debug Linux +MKL">
				<Option platforms="Unix;" />
				<Option output="bin/Debug/raster_tuning_HH3_gcc" prefix_auto="1" extension_auto="1" />
				<Option working_dir="./" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Option parameters="-ng -v -inf - -n 80 20 -t 1e3 -seed 1 -mat net_100_0X65763652.txt -pr 1 -ps 0.03 -scee 0.05 -scei 0.07 -scie 0.09 -scii 0.09 --bin-save -o ./data/a.dat" />
				<Compiler>
					<Add option="-DEIGEN_USE_MKL_ALL" />
					<Add directory="/usr/include/eigen3" />
					<Add directory="/opt/intel/composer_xe_2013_sp1.2.144/mkl/include" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option='-Wl,--start-group &quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/lib/intel64&quot;/libmkl_intel_lp64.a &quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/lib/intel64&quot;/libmkl_intel_thread.a &quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/lib/intel64&quot;/libmkl_core.a -Wl,--end-group -L&quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/../compiler/lib/intel64&quot; -Wl,-Bstatic -liomp5 -Wl,-Bdynamic -lm -ldl -lpthread' />
					<Add library="glut32" />
					<Add library="opengl32" />
					<Add library="glu32" />
				</Linker>
			</Target>
			<Target title="Release Linux">
				<Option platforms="Unix;" />
				<Option output="bin/Release/raster_tuning_HH3_gcc" prefix_auto="1" extension_auto="1" />
				<Option working_dir="./" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Option parameters="-ng -v -inf - -n 80 20 -t 1e3 -seed 1 -mat net_100_0X65763652.txt -pr 1 -ps 0.03 -scee 0.05 -scei 0.07 -scie 0.09 -scii 0.09 --bin-save -o ./data/a.dat" />
				<Compiler>
					<Add option="-O2" />
					<Add option="-pedantic" />
					<Add directory="/usr/include/eigen3" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add library="GL" />
					<Add library="GLU" />
					<Add library="glut" />
				</Linker>
			</Target>
			<Target title="Debug Linux">
				<Option platforms="Unix;" />
				<Option output="bin/Debug/raster_tuning_HH3_gcc" prefix_auto="1" extension_auto="1" />
				<Option working_dir="./" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-pedantic" />
					<Add directory="/usr/include/eigen3" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add library="glut32" />
					<Add library="opengl32" />
					<Add library="glu32" />
				</Linker>
			</Target>
			<Target title="Release win32">
				<Option platforms="Windows;" />
				<Option output="bin/Release/raster_tuning" prefix_auto="1" extension_auto="1" />
				<Option working_dir="./" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
				</Compiler>
				<Linker>
					<Add library="glut32" />
					<Add library="opengl32" />
					<Add library="glu32" />
				</Linker>
			</Target>
			<Target title="Debug win32">
				<Option platforms="Windows;" />
				<Option output="bin/Debug/raster_tuning" prefix_auto="1" extension_auto="1" />
				<Option working_dir="./" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-pg" />
					<Add option="-g" />
				</Compiler>
				<Linker>
					<Add option="-pg -lgmon" />
					<Add library="glut32" />
					<Add library="opengl32" />
					<Add library="glu32" />
				</Linker>
			</Target>
			<Target title="test Release Linux + MKL">
				<Option platforms="Unix;" />
				<Option output="bin/Release/raster_tuning_HH3_gcc" prefix_auto="1" extension_auto="1" />
				<Option working_dir="./" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Option parameters="100 1000000" />
				<Compiler>
					<Add option="-march=corei7-avx" />
					<Add option="-O2" />
					<Add option="-DEIGEN_USE_MKL_ALL" />
					<Add directory="/usr/include/eigen3" />
					<Add directory="/opt/intel/composer_xe_2013_sp1.2.144/mkl/include" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option='-Wl,--start-group &quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/lib/intel64&quot;/libmkl_intel_lp64.a &quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/lib/intel64&quot;/libmkl_intel_thread.a &quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/lib/intel64&quot;/libmkl_core.a -Wl,--end-group -L&quot;/opt/intel/composer_xe_2013_sp1.2.144/mkl/../compiler/lib/intel64&quot; -Wl,-Bstatic -liomp5 -Wl,-Bdynamic -lm -ldl -lpthread' />
					<Add library="GL" />
					<Add library="GLU" />
					<Add library="glut" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
			<Add option="-ansi" />
		</Compiler>
		<Unit filename="Readme.txt">
			<Option target="&lt;{~None~}&gt;" />
		</Unit>
		<Unit filename="changelog">
			<Option target="&lt;{~None~}&gt;" />
		</Unit>
		<Unit filename="cortical_matrix.txt">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="datahandling.cpp">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="datahandling.h">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="datainput.cpp">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="datainput.h">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="loop.cpp">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="loop.h">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="myopengl.cpp">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="myopengl.h">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="neuron.cpp">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="neuron.h">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="poisson_input.cpp">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="poisson_input.h">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="random.cpp">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="random.h">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="raster.cpp">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="raster.h">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="raster_tuning.cpp">
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="stdafx.h">
			<Option weight="1" />
			<Option target="Debug Linux" />
			<Option target="Release Linux" />
			<Option target="Debug win32" />
			<Option target="Release win32" />
			<Option target="Debug Linux +MKL" />
			<Option target="Release Linux + MKL" />
		</Unit>
		<Unit filename="test.txt">
			<Option target="&lt;{~None~}&gt;" />
		</Unit>
		<Unit filename="test2.txt">
			<Option target="&lt;{~None~}&gt;" />
		</Unit>
		<Unit filename="test_mkl.cpp">
			<Option target="test Release Linux + MKL" />
		</Unit>
		<Extensions>
			<envvars />
			<code_completion />
			<debugger />
			<DoxyBlocks>
				<comment_style block="5" line="2" />
				<doxyfile_project output_language="Chinese" />
				<doxyfile_build />
				<doxyfile_warnings />
				<doxyfile_output />
				<doxyfile_dot />
				<general />
			</DoxyBlocks>
		</Extensions>
	</Project>
</CodeBlocks_project_file>
